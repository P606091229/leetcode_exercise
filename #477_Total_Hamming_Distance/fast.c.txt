//#define get_bit(x,bit) ((x&(1<<bit))>>bit)
#define get_bit(x,bit) ((x>>bit)&1)

int totalHammingDistance(int* nums, int numsSize) {
    int i = 0;
    int cnt[32] = {0};
    int part_sum[4] = {0};
    int dist_sum = 0;
    
    for ( i = 0; i < numsSize; i++ ) {
        cnt[0 ] += get_bit ( nums[i], 0  );
        cnt[1 ] += get_bit ( nums[i], 1  );
        cnt[2 ] += get_bit ( nums[i], 2  );
        cnt[3 ] += get_bit ( nums[i], 3  );
        cnt[4 ] += get_bit ( nums[i], 4  );
        cnt[5 ] += get_bit ( nums[i], 5  );
        cnt[6 ] += get_bit ( nums[i], 6  );
        cnt[7 ] += get_bit ( nums[i], 7  );
        cnt[8 ] += get_bit ( nums[i], 8  );
        cnt[9 ] += get_bit ( nums[i], 9  );
        cnt[10] += get_bit ( nums[i], 10 );
        cnt[11] += get_bit ( nums[i], 11 );
        cnt[12] += get_bit ( nums[i], 12 );
        cnt[13] += get_bit ( nums[i], 13 );
        cnt[14] += get_bit ( nums[i], 14 );
        cnt[15] += get_bit ( nums[i], 15 );
        cnt[16] += get_bit ( nums[i], 16 );
        cnt[17] += get_bit ( nums[i], 17 );
        cnt[18] += get_bit ( nums[i], 18 );
        cnt[19] += get_bit ( nums[i], 19 );
        cnt[20] += get_bit ( nums[i], 20 );
        cnt[21] += get_bit ( nums[i], 21 );
        cnt[22] += get_bit ( nums[i], 22 );
        cnt[23] += get_bit ( nums[i], 23 );
        cnt[24] += get_bit ( nums[i], 24 );
        cnt[25] += get_bit ( nums[i], 25 );
        cnt[26] += get_bit ( nums[i], 26 );
        cnt[27] += get_bit ( nums[i], 27 );
        cnt[28] += get_bit ( nums[i], 28 );
        cnt[29] += get_bit ( nums[i], 29 );
        cnt[30] += get_bit ( nums[i], 30 );
        cnt[31] += get_bit ( nums[i], 31 );
    }
    
    for ( i = 0; i < 32; i+=4 ) {
        part_sum[0] += cnt[i+0] * ( numsSize - cnt[i+0] );
        part_sum[1] += cnt[i+1] * ( numsSize - cnt[i+1] );
        part_sum[2] += cnt[i+2] * ( numsSize - cnt[i+2] );
        part_sum[3] += cnt[i+3] * ( numsSize - cnt[i+3] );
    }
    for ( i = 0; i < 4; i++ )
        dist_sum += part_sum[i];
    
    return dist_sum;
}